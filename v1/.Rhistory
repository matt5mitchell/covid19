install.packages("tidyr")
install.packages("ggplot2")
install.packages("shiny")
getwd()
setwd(C:/Users/matts/Documents/R/covid19/v1)
setwd("C:/Users/matts/Documents/R/covid19/v1")
## Load data
library(readr)
source('~/R/covid19/v1/01_load_data.R', echo=TRUE)
View(confirmed)
problems()
problems(...)
problems(deceased)
View(confirmed)
source('~/R/covid19/v1/01_load_data.R', echo=TRUE)
View(confirmed)
library(dplyr)
# Prepare data
blah <- confirmed %>% filter(`Country/Region` == "US")
View(blah)
states <- read_csv(url(url_states))
url_states <- "https://raw.githubusercontent.com/matt5mitchell/covid19/master/v1/states.csv"
states <- read_csv(url(url_states))
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US") #,
blah$`Province/State`
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US") %>%
slice(1:52)
View(blah)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
`Province/State` %in% c("Diamond Princess", "Grand Princess")) %>%
slice(1:50)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
!(`Province/State` %in% c("Diamond Princess", "Grand Princess"))) %>%
slice(1:50)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
!(`Province/State` %in% c("Diamond Princess", "Grand Princess"))) %>%
slice(1:50) %>%
arrange(`Province/State`)
cbind(blah$`Province/State`, states$State)
# Population estimates 2019 (US Census Bureau)
url_states <- "https://raw.githubusercontent.com/matt5mitchell/covid19/master/v1/states.csv"
states <- read_csv(url(url_states))
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
!(`Province/State` %in% c("Diamond Princess", "Grand Princess"))) %>%
slice(1:50) %>%
arrange(`Province/State`)
cbind(blah$`Province/State`, states$State)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
`Province/State` %in% state$States) %>%
arrange(`Province/State`)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
arrange(`Province/State`)
View(blah)
?gather
?tidyr::gather
library(tidyr)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Confirmed", State)
# Prepare data
blah <- confirmed %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Confirmed", -State)
source('~/R/covid19/v1/01_load_data.R', echo=TRUE)
source('~/R/covid19/v1/01_load_data.R', echo=TRUE)
deceased <- deceased_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Deceased", -State)
# Final dataset
covid <- colbind(confirmed, recovered$Recovered, deceased$Deceased)
# Final dataset
covid <- cbind(confirmed, recovered$Recovered, deceased$Deceased)
View(covid)
# Final dataset
covid <- data.frame(confirmed,
Recovered = recovered$Recovered,
Deceased = deceased$Deceased)
# Final dataset
covid <- data.frame(confirmed,
Recovered = recovered$Recovered,
Deceased = deceased$Deceased) %>%
mutate(Removed = Recovered + Deceased) #For SIR modeling
View(covid)
View(deceased_raw)
View(recovered_raw)
View(confirmed_raw)
# Final dataset
covid <- data.frame(confirmed,
Recovered = recovered$Recovered,
Deceased = deceased$Deceased) %>%
mutate(Removed = Recovered + Deceased) %>% #For SIR modeling
arrange(State, Date)
library(lubridate)
lubridate::myd
?lubridate::myd
# Prepare data
confirmed <- confirmed_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Confirmed", -State) %>%
mutate(Date = myd(Date))
View(confirmed)
View(confirmed_raw)
# Prepare data
confirmed <- confirmed_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Confirmed", -State) %>%
mutate(Date = mdy(Date))
View(confirmed)
covid <- confirmed %>%
left_join(deceased, by = c("Date", "State"))
# Final dataset
covid <- confirmed %>%
left_join(deceased, by = c("Date" = "Date", "State" = "State"))
recovered <- recovered_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Recovered", -State) %>%
mutate(Date = mdy(Date)) %>%
arrange(State, Date)
deceased <- deceased_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Deceased", -State) %>%
mutate(Date = mdy(Date)) %>%
arrange(State, Date)
# Final dataset
covid <- confirmed %>%
left_join(deceased, by = c("Date", "State"))
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
mutate(Removed = Recovered + Deceased)
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
mutate(Removed = Recovered + Deceased) %>% #For SIR modeling
arrange(Date, State)
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
mutate(Removed = Recovered + Deceased) #For SIR modeling
# Prepare data
confirmed <- confirmed_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Confirmed", -State) %>%
mutate(Date = mdy(Date))
recovered <- recovered_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Recovered", -State) %>%
mutate(Date = mdy(Date))
deceased <- deceased_raw %>%
filter(`Country/Region` == "US",
`Province/State` %in% states$State) %>%
rename(State = `Province/State`) %>%
select(-`Country/Region`, -Lat, -Long) %>%
gather("Date", "Deceased", -State) %>%
mutate(Date = mdy(Date))
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
arrange(State, Date)
covid_sir <- covid %>%
group_by(State) %>%
left_join(state[, c("State", "Population")], by = "State") %>%
mutate(Infected = Confirmed - Recovered - Deceased,
Removed = Recovered + Deceased,
Susceptible = Population - Infected - Removed) %>% #For SIR modeling
select(State, Susceptible, Infected, Removed)
covid_sir <- covid %>%
group_by(State) %>%
left_join(states[, c("State", "Population")], by = "State") %>%
mutate(Infected = Confirmed - Recovered - Deceased,
Removed = Recovered + Deceased,
Susceptible = Population - Infected - Removed) %>% #For SIR modeling
select(State, Susceptible, Infected, Removed)
View(covid_sir)
arrange(State, Date)
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
mutate(Incidence = Confirmed - lag(Confirmed, n = 1L)) %>%
arrange(State, Date)
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
mutate(Incidence = max(Confirmed - lag(Confirmed, n = 1L), 0)) %>%
arrange(State, Date)
covid_sir <- covid %>%
group_by(State) %>%
left_join(states[, c("State", "Population")], by = "State") %>%
mutate(Infected = Confirmed - Recovered - Deceased,
Removed = Recovered + Deceased,
Susceptible = Population - Infected - Removed) %>% #For SIR modeling
select(State, Susceptible, Infected, Removed)
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
mutate(Incidence = max(c(Confirmed - lag(Confirmed, n = 1L), 0))) %>%
arrange(State, Date)
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
mutate(Incidence = Confirmed - lag(Confirmed, n = 1L),
Incidence = ifelse(Incidence < 0, 0, Incidence)) %>% #Prevent negatives from bad data
arrange(State, Date)
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
arrange(State, Date) %>%
group_by(State) %>%
mutate(Incidence = Confirmed - lag(Confirmed, n = 1L),
Incidence = ifelse(Incidence < 0, 0, Incidence)) #Prevent negatives from bad data
?lag
# Final dataset
covid <- confirmed %>%
left_join(recovered, by = c("Date", "State")) %>%
left_join(deceased, by = c("Date", "State")) %>%
arrange(State, Date) %>%
group_by(State) %>%
mutate(Incidence = Confirmed - lag(Confirmed, n = 1L, default = 0),
Incidence = ifelse(Incidence < 0, 0, Incidence)) #Prevent negatives from bad data
covid_sir <- covid %>%
group_by(State) %>%
left_join(states[, c("State", "Population")], by = "State") %>%
mutate(Infected = Confirmed - Recovered - Deceased,
Removed = Recovered + Deceased,
Susceptible = Population - Infected - Removed) %>% #For SIR modeling
select(State, Susceptible, Infected, Removed)
summarize(states, pop = sum(State))
summarize(states, pop = sum(Population))
View(states)
source('~/R/covid19/v1/01_load_data.R', echo=TRUE)
summarize(states, pop = sum(Population))
library(R0)
data(Germany.1918)
head(Germany.1918)
str(Germany.1918)
mGT<-generation.time("gamma", c(3, 1.5))
str(mGT)
lGT<-generation.time("lognormal")
lGT<-generation.time("lognormal", c(4.7, 2.9))
str(lGT)
lGT
TD <- est.R0.TD(Germany.1918, mGT, begin=1, end=126, nsim=100)
TD
td <- data.frame(td = unlist(TD))
str(TD)
plot(T)
plot(TD)
covid$Incidence
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence))
covid$Incidence
epid$Incidence
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence))
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(epid$Incidence, lGT, begin = 45, end = 57, nsim = 100)
plot(Rt)
View(epid)
which(min(epid$Incidence > 0))
which(epid$Incidence > 0)
min(which(epid$Incidence > 0))
begin <- min(which(epid$Incidence > 0))
epid <- epid[begin:nrow(epid),]
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(epid$Incidence, lGT, begin = 45, end = 57, nsim = 100)
plot(Rt)
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence))
begin <- min(which(epid$Incidence > 0))
epid <- epid[begin:nrow(epid),]
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(epid$Incidence, lGT, begin = 45, end = 57, nsim = 100)
epid <- epid$Incidence[begin:nrow(epid)]
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(epid, lGT, begin = 45, end = 57, nsim = 100)
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence))
begin <- min(which(epid$Incidence > 0))
epid <- epid[begin:nrow(epid)]
lGT<-generation.time("lognormal", c(4.7, 2.9))
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence))
begin <- min(which(epid$Incidence > 0))
epid <- epid[begin:nrow(epid),]
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(epid, lGT, begin = 45, end = 57, nsim = 100)
check.incid(epid)
str(epid)
install.packages("epitools")
blah <- c(1,2,4,1,7,5,3,6,7,8,9,12,15,34,32,21,34)
Rt <- est.R0.TD(blah, lGT, nsim = 100)
plot(Rt)
epid <- epid$Incidence[begin:nrow(epid),]
epid <- epid$Incidence[begin:nrow(epid)]
begin
begin:57
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence))
begin <- min(which(epid$Incidence > 0))
epid <- epid$Incidence[begin:nrow(epid)]
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(blah, lGT, nsim = 100)
plot(Rt)
Rt <- est.R0.TD(epid, lGT, nsim = 100)
plot(Rt)
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence)) %>%
slice(min(which(.$Incidence > 0)):nrow(.))
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence)) %>%
slice(min(which(.$Incidence > 0)):nrow(.))
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(epid, lGT, nsim = 100)
Rt <- est.R0.TD(epid$Incidence, lGT, nsim = 100)
plot(Rt)
Rt <- est.R0.TD(blah, lGT, nsim = 100)
plot(Rt)
epid <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence)) %>%
slice(min(which(.$Incidence > 0)):nrow(.))
lGT<-generation.time("lognormal", c(4.7, 2.9))
Rt <- est.R0.TD(epid$Incidence, lGT, nsim = 100)
plot(Rt)
gt_lognormal <-generation.time("lognormal", c(4.7, 2.9))
covid_incid_sum <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence)) %>%
slice(min(which(.$Incidence > 0)):nrow(.)) #First detection onward
Rt <- est.R0.TD(covid_incid_sum$Incidence, gt_lognormal, nsim = 100)
plot(Rt)
str(Rt)
gt_lognormal <-generation.time("lognormal", c(4.7, 2.9))
incid_sum <- covid %>%
group_by(Date) %>%
summarize(Incidence = sum(Incidence)) %>%
slice(min(which(.$Incidence > 0)):nrow(.)) #First detection onward
Rt <- est.R0.TD(incid_sum$Incidence, gt_lognormal, nsim = 100)
Rt_plot_obj <- data.frame(incid_sum,
Rt = Rt$R,
`Lower CI`= Rt$conf.int$lower,
`Upper CI`= Rt$conf.int$upper)
Rt$R
Rt$conf.int$lower
Rt$conf.int$upper
incid_sum[-1,]
Rt_plot_obj <- data.frame(incid_sum[-1],
Rt = Rt$R,
`Lower CI`= Rt$conf.int$lower,
`Upper CI`= Rt$conf.int$upper)
Rt_plot_obj <- data.frame(incid_sum[-1,],
Rt = Rt$R,
`Lower CI`= Rt$conf.int$lower,
`Upper CI`= Rt$conf.int$upper)
Rt_plot_obj <- data.frame(incid_sum[-1,], #No Rt for first date
Rt = Rt$R,
`Lower CI`= Rt$conf.int$lower,
`Upper CI`= Rt$conf.int$upper)
Rt_plot_obj %>%
gather("Series", "Value", -Date) %>%
ggplot2(aes(x=Date, y=Value, group=Series)) +
geom_line()
library(ggplot2)
Rt_plot_obj %>%
gather("Series", "Value", -Date) %>%
ggplot2(aes(x=Date, y=Value, group=Series)) +
geom_line()
library(ggplot2)
Rt_plot_obj %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_line()
View(Rt_plot_obj)
Rt_plot_obj %>%
select(-Incidence) %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_line()
Rt_plot_obj %>%
select(-Incidence) %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_line()
Rt_plot_obj %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_line()
Rt_plot_obj %>%
select(-Incidence) %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_line()
Rt_plot_obj %>%
select(-Incidence)
Rt_plot_obj %>%
dplyr::select(-Incidence) %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_line()
Rt_plot_obj %>%
dplyr::select(-Incidence) %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_line() +
geom_hline(yintercept = 0)
Rt_plot_obj %>%
dplyr::select(-Incidence) %>%
gather("Series", "Value", -Date) %>%
ggplot(aes(x=Date, y=Value, group=Series)) +
geom_spline() +
geom_hline(yintercept = 0)
Rt_plot_obj %>%
ggplot(aes(x = Date)) +
geom_ribbon(aes(ymin = `Lower CI`, ymax = `Upper CI`)) +
geom_line(aes(y=Rt)) +
geom_hline(yintercept = 0)
Rt_plot_obj %>%
ggplot(aes(x = Date)) +
#geom_ribbon(aes(ymin = `Lower CI`, ymax = `Upper CI`)) +
geom_line(aes(y=Rt)) +
geom_hline(yintercept = 0)
Rt_plot_obj <- data.frame(incid_sum[-1,], #No Rt for first date
Rt = Rt$R,
Lower= Rt$conf.int$lower,
Upper= Rt$conf.int$upper)
Rt_plot_obj %>%
ggplot(aes(x = Date)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper)) +
geom_line(aes(y=Rt)) +
geom_hline(yintercept = 0)
Rt_plot_obj %>%
ggplot(aes(x = Date)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = .2, color = "blue") +
geom_line(aes(y=Rt)) +
geom_hline(yintercept = 0)
Rt_plot_obj %>%
ggplot(aes(x = Date)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = .2, fill = "blue") +
geom_line(aes(y=Rt)) +
geom_hline(yintercept = 0)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/covid19/v1/02_estimate_Rt.R', echo=TRUE)
source('~/R/covid19/v1/02_estimate_Rt.R', echo=TRUE)
source('~/R/covid19/v1/02_estimate_Rt.R', echo=TRUE)
source('~/R/covid19/v1/02_estimate_Rt.R', echo=TRUE)
